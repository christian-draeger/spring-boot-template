[versions]
spring-boot = "3.2.4"
spring-dependency-management = "1.1.4"
springdoc = "2.3.0"

kotlin = "1.9.23"
kotlin-logging = "3.0.5"

postgresql = "42.7.3"
liquibase = "4.18.0"
liquibase-sessionlock = "1.6.4"
hibernate-types-60 = "2.20.0"
hypersistence = "3.7.3"

strikt = "0.34.1"
mockk = "1.13.9"
springmockk = "4.0.2"

[libraries]
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }

spring-boot-actuator-autoconfigure = { module = "org.springframework.boot:spring-boot-actuator-autoconfigure" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation" }

spring-boot-devtools = { module = "org.springframework.boot:spring-boot-devtools" }
spring-boot-docker-compose = { module = "org.springframework.boot:spring-boot-docker-compose" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-boot-testcontainers = { module = "org.springframework.boot:spring-boot-testcontainers" }

testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
springmockk = { module = "com.ninja-squad:springmockk", version.ref = "springmockk" }
strikt = { module = "io.strikt:strikt-core", version.ref = "strikt" }

postgres = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
hypersistence = { module = "io.hypersistence:hypersistence-utils-hibernate-63", version.ref = "hypersistence" }
liquibase = { module = "org.liquibase:liquibase-core", version.ref = "liquibase" }
liquibase-sessionlock = { module = "com.github.blagerweij:liquibase-sessionlock", version.ref = "liquibase-sessionlock" }
hibernate-types-60 = { module = "com.vladmihalcea:hibernate-types-60", version.ref = "hibernate-types-60" }

jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind" }
jackson-dataformat-xml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-xml" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" }

springdoc-openapi-starter-common = { module = "org.springdoc:springdoc-openapi-starter-common", version.ref = "springdoc" }
springdoc-openapi-starter-webmvc-ui = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "springdoc" }

kotlinLogging = { module = "io.github.microutils:kotlin-logging-jvm", version.ref = "kotlin-logging" }

[bundles]
kotlin = ["kotlin-reflect", "jackson-databind", "jackson-module-kotlin", "jackson-dataformat-xml", "jackson-datatype-jsr310"]
spring = ["spring-boot-starter-web", "spring-boot-starter-data-jpa", "spring-boot-actuator-autoconfigure", "spring-boot-starter-validation"]
springdoc = ["springdoc-openapi-starter-webmvc-ui", "springdoc-openapi-starter-common"]
springDevTools = ["spring-boot-devtools", "spring-boot-docker-compose"]
springTesting = ["spring-boot-starter-test", "spring-boot-testcontainers", "testcontainers-junit-jupiter", "springmockk"]
databaseUtils = ["hibernate-types-60", "liquibase", "liquibase-sessionlock"]
test = ["mockk", "strikt"]

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }

spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dependency-management" }
docker-spring-boot-application = { id = "com.bmuschko.docker-spring-boot-application", version = "9.4.0" }

gitProperties = { id = "com.gorylenko.gradle-git-properties", version = "2.4.1" }
