package com.tsi.dv.starter.logger

import mu.KLogger
import mu.KotlinLogging

/**
 * Extension property to get logger for any class.
 * Since T is a reified type parameter, it's known at runtime.
 * Also, the function is inline, so that generated byte-code has a simple class literal.
 * Thereby you're getting the best possible performance (since logger is usually not static in Kotlin).
 * Furthermore, it eliminates the need to do logger declaration over and over again.
 * @author Christian Dr√§ger
 * @return logger for any class
 */
inline val <reified T> T.logger: KLogger
    get() = KotlinLogging.logger(name = T::class.java.canonicalName ?: T::class.java.name)
